<?php
// $Id$

/**
 * @file
 *
 */

function auto_opengraph_schema() {
  $schema['auto_opengraph'] = array(
    'description' => t('For holding opengraph information'),
    'fields' => array(
      'ogid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => t('Primary key')
      ),
      'nid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => NULL,
        'description' => t('A node id'),
      ),
      'auto_opengraph_fb_page' => array(
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'default' => 0,
        'description' => t('Boolean whether to create a facebook page')
      ),
      'auto_opengraph_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => t('the og:type for the node, if any'),
      ),
    ),
    'primary key' => array('ogid'),
    'unique keys' => array(
      'nid' => array('nid'),
    ),
  );
  return $schema;
}

function auto_opengraph_install() {
  drupal_install_schema('auto_opengraph');
  if (module_exists('imagecache')) {
    if (!$preset = imagecache_preset_by_name('opengraph_thumbnail')) {
      $preset = imagecache_preset_save(array('presetname' => 'opengraph_thumbnail'));
      $action = array(
        'action' => 'auto_opengraph_crop',
        'presetid' => $preset['presetid'],
        'data' => array(
          'aspect' => '3:1',
          'fit' => 'max',
          'reversible' => 1,
        ),
        'weight' => 0,
      );
      imagecache_action_save($action);
      $action = array(
        'action' => 'imagecache_scale',
        'presetid' => $preset['presetid'],
        'data' => array(
          'width' => "300",
          'height' => "300",
          'upscale' => 0,
        ),
        'weight' => 1,
      );
      imagecache_action_save($action);
    }
    variable_set('auto_opengraph_imagecache_preset', 'opengraph_thumbnail');
  }
  else {
    variable_set('auto_opengraph_imagecache_preset', 0);
  }
}

function auto_opengraph_uninstall() {
  drupal_uninstall_schema('auto_opengraph');
  db_query("DELETE FROM {variable} WHERE name LIKE 'auto_opengraph_%'");
}

function auto_opengraph_update_6101() {
  $ret = array();
  db_add_field($ret, 'auto_opengraph', 'ogid', array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => t('Primary key')));
  db_add_primary_key($ret, 'auto_opengraph', array('ogid'));
  return $ret;
}